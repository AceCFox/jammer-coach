{"version":3,"sources":["components/AboutPage/paxos.jpg","components/Nav/favicon_white.png","redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/categoryReducer.js","redux/reducers/skillReducer.js","redux/reducers/allSkaterReducer.js","redux/reducers/skillCategoryReducer.js","redux/reducers/curriculumReducer.js","redux/reducers/footageReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/categorySaga.js","redux/sagas/skillSaga.js","redux/sagas/skaterSaga.js","redux/sagas/addSkillSaga.js","redux/sagas/curriculumSaga.js","redux/sagas/skillCategorySaga.js","redux/sagas/updateSkillSaga.js","redux/sagas/profileSaga.js","redux/sagas/footageSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/CoachRoute/CoachRoute.js","components/AboutPage/AboutPage.js","components/UserPage/UserPage.js","components/AddSkill/AddSkill.js","components/AssignListItem/AssignListItem.js","components/AssignList/AssignList.js","components/EditSkillItem/EditSkillItem.js","components/EditSkill/EditSkill.js","components/CurriculumItem/CurriculumItem.js","components/Curriculum/Curriculum.js","components/ManageSkaterItem/ManageSkaterItem.js","components/FootageItem/FootageItem.js","components/ManageSkater/ManageSkater.js","components/AddSelfFootage/AddSelfFootage.js","components/Landing/Landing.js","components/App/App.js","index.js"],"names":["module","exports","combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","categoryReducer","skillReducer","allSkaterReducer","skillCategoryReducer","curriculumReducer","footageReducer","rootReducer","errors","user","category","skill","allSkater","skillCategory","curriculum","footage","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","categorySaga","allSkill","categorySkill","deleteSkill","favoriteSkill","skillSaga","delete","skaterSaga","addSkill","assignSkill","getCurriculum","updateSkaterNote","updateCoachNote","deleteUserSkill","curriculumSaga","user_id","id","getJunction","postJunction","deleteJunction","skillCategorySaga","updateSkill","updateSkillSaga","updateEmail","updateBio","updateGoals","profileSaga","postFootage","getFootage","deleteFootage","footageSaga","rootSaga","all","addSkillSaga","connect","props","Button","color","onClick","dispatch","Nav","Component","mobileOpen","handleDrawerToggle","this","setState","render","classes","drawer","className","toolbar","reduxState","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","username","Divider","is_coach","root","AppBar","position","Toolbar","IconButton","menuButton","grow","icon","src","require","alt","Drawer","container","anchor","open","onClose","paper","drawerPaper","withStyles","theme","display","flexGrow","backgroundColor","breakpoints","up","width","flexShrink","appBar","marginLeft","marginRight","mixins","content","padding","spacing","logout","height","Footer","Grid","LoginPage","password","login","event","preventDefault","handleInputChangeFor","propertyName","target","value","role","direction","justify","alignItems","item","xs","sm","md","lg","xl","Paper","onSubmit","TextField","label","name","onChange","variant","backgroundImage","backgroundRepeat","backgroundPosition","textAlign","palette","text","secondary","margin","borderRadius","textFeld","longField","fontFamily","fontSize","RegisterPage","email","FormControl","InputLabel","Select","inputProps","MenuItem","backgroundSize","formControl","ComponentToProtect","otherProps","ComponentToShow","AboutPage","img","paxos","backgroundAttachment","minHeight","maxWidth","UserPage","bio","goals","editEmail","editBio","editGoals","handleChange","handleEditEmail","saveEmail","putObject","saveBio","saveGoals","componentDidMount","componentDidUpdate","previousProps","textField","multiline","rowsMax","categoryList","listStyle","AddSkill","title","author","url","description","thisCategory","lastTitle","submitted","handleAdd","array","newCategory","i","length","push","handleRemove","splice","handleSubmit","submitObject","categories","handelOk","reason","alignContent","htmlFor","map","key","subheader","ListSubheader","index","size","disabled","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","allignContent","AssignListItem","selected","notes","lastSelected","favorite","handleAssign","postObject","skill_id","coach_notes","handleOk","handleFavorite","controls","video","Checkbox","checkedIcon","checked","skater","success","cvariant","minWidth","green","AssignList","selectedCategory","viewing","handleViewCategory","handleViewAll","paper2","grid","EditSkillItem","edit","viewCategories","addCategories","deleteCategories","setCatagories","junction","category_id","handleEditTrue","handleEditFalse","handleSave","addObject","deleteObject","updateObject","newCat","viewArray","addArray","notView","notAdd","thisCat","deleteArray","inAdd","handleClickOpen","handleClose","handleDelete","light","smallList","Dialog","DialogContent","DialogContentText","DialogActions","maxHeight","margins","EditSkill","CurriculumItem","submitNotes","handleEdit","skater_notes","Curriculum","ManageSkaterItem","handleOpen","FootageItem","added_by","ManageSkater","selectedSkater","handleViewskater","user_skill_id","AddSelfFootage","lastSkill","Typography","nowrap","Landing","createMuiTheme","blue","deepOrange","overrides","App","CssBaseline","exact","from","path","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.093bf3d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paxos.76bd4143.jpg\";","module.exports = __webpack_public_path__ + \"static/media/favicon_white.9e2c0f78.png\";","import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const categoryReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_CATEGORY':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // category will be on the redux state at:\n  // state.category\n  export default categoryReducer;\n  ","const skillReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_SKILL':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // user will be on the redux state at:\n  // state.user\n  export default skillReducer;\n  ","const allSkaterReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ALL_SKATER':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // all users will be on the redux state at:\n  // state.allSkater\n  export default allSkaterReducer;\n  ","const skillCategoryReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'PUT_SKILL_CATEGORY':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // user will be on the redux state at:\n  // state.skillCategory\n  export default skillCategoryReducer;","const curriculumReducer = (state = [{}], action) => {\n    switch (action.type) {\n      case 'SET_CURRICULUM':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // curriculum will be on the redux state at:\n  // state.curriculum\n  export default curriculumReducer;","const footageReducer = (state = [{}], action) => {\n    switch (action.type) {\n      case 'SET_FOOTAGE':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // curriculum will be on the redux state at:\n  // state.footage\n  export default footageReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport category from './categoryReducer';\nimport skill from './skillReducer';\nimport allSkater from './allSkaterReducer';\nimport skillCategory from './skillCategoryReducer';\nimport curriculum from './curriculumReducer';\nimport footage from './footageReducer'\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  category, //will have the array of category objects {id and name}\n  skill, //will have an array of skill objects (title, author, url, id, description)\n  allSkater,//will have an array of skater obejcts (id, username, bio, goals)\n  skillCategory,//has an array of objects {skill_id, category_id, name, id}\n  curriculum,//has an array of skill objects joined to a user\n  footage,//has an array of footage objects with a .id, .url, .added_by, .user_skill_id, .notes\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"GET_CATEGORY\" actions\nfunction* category() {\n  try {\n    //get categories from database/server\n    const response = yield axios.get('/api/category/');\n    // store categories in category reducer\n    yield put({ type: 'SET_CATEGORY', payload: response.data });\n  } catch (error) {\n      console.log('Error with category get:', error);\n  }\n}\n\nfunction* categorySaga() {\n  yield takeLatest('GET_CATEGORY', category);\n}\n\nexport default categorySaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"GET_ALL_SKILL\" actions\nfunction* allSkill() {\n  try {\n    //get all skills from database/server\n    const response = yield axios.get('/api/skill/');\n    // store all skills in skill reducer\n    yield put({ type: 'SET_SKILL', payload: response.data });\n  } catch (error) {\n      console.log('Error with skill get:', error);\n  }\n}\n\n//worker Saga that will be fired on \"GET_SKILL_CATEGORY\" actions\nfunction* categorySkill(action) {\n  try {\n    //get all skills from database/server\n    const response = yield axios.get('/api/skill/category/'+ action.payload);\n    // store all skills in skill reducer\n    yield put({ type: 'SET_SKILL', payload: response.data });\n  } catch (error) {\n      console.log('Error with skill get:', error);\n  }\n}\n\n//this saga fires on \"DELETE_SKILL\" actions\nfunction* deleteSkill(action){\n  try{\n    yield axios.delete('/api/skill/' + action.payload);\n    yield put({type: 'GET_ALL_SKILL'});\n  } catch(error){\n    console.log('error deleting skill:', error);\n  }\n}\n\n//this saga fires on 'FAVORITE SKILL' action\nfunction* favoriteSkill(action){\n  try{\n    const response = yield axios.put('/api/skill/favorite/' + action.payload);\n   // yield put({type: 'GET_ALL_SKILL'});\n   console.log(response);\n  } catch (error){\n    console.log('error favoriting skill:', error);\n  }\n}\n\n\nfunction* skillSaga() {\n  yield takeLatest('GET_ALL_SKILL', allSkill);\n  yield takeLatest('GET_SKILL_CATEGORY', categorySkill);\n  yield takeLatest('DELETE_SKILL', deleteSkill);\n  yield takeLatest('FAVORITE_SKILL', favoriteSkill);\n}\n\nexport default skillSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"GET_SKATER\" actions\nfunction* allSkater() {\n  try {\n    //get categories from database/server\n    const response = yield axios.get('/api/user/all');\n    // store categories in category reducer\n    yield put({ type: 'SET_ALL_SKATER', payload: response.data });\n  } catch (error) {\n      console.log('Error with category get:', error);\n  }\n}\n\nfunction* skaterSaga() {\n  yield takeLatest('GET_SKATER', allSkater);\n}\n\nexport default skaterSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//this saga gets fired with every 'POST_SKILL' action\nfunction* addSkill(action){\n    try {\n        yield axios.post('/api/skill', action.payload);\n        yield put({ type: 'GET_ALL_SKILL' });\n    }  catch (error) {\n        console.log('Error with skill post:', error);\n    }\n}\n\n\n\nfunction* skillSaga() {\n  yield takeLatest('POST_SKILL', addSkill);\n}\n\nexport default skillSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//this saga gets fired with every 'ASSIGN_SKILL' action\n//it will add a skill to a skater's curriculum on the user_skill table\nfunction* assignSkill(action){\n    try {\n        yield axios.post('/api/skater/assign', action.payload);\n        yield put({ type: 'GET_SKATER' });\n    }  catch (error) {\n        console.log('Error with skill post:', error);\n    }\n}\n\n//this saga will get all the skills assigned to a skater\n//it requires a user id as a payload\n//it will fire with every 'GET_CURRICULUM' action\nfunction* getCurriculum(action){\n    try {\n        const response = yield axios.get('/api/skater/skill/' + action.payload);\n        yield put({ type: 'SET_CURRICULUM', payload: response.data });\n    }  catch (error) {\n        console.log('Error with curriculumGet:', error);\n    }\n}\n\n//this saga will update a skater_note on a skill_skater row\n//it will fire with every 'UPDATE_SKATER_NOTE' action\nfunction* updateSkaterNote(action){\n    try {\n        yield axios.put('/api/skater/skatenote', action.payload);\n        yield put({ type: 'GET_CURRICULUM', payload: action.payload.user_id });\n        //console.log('updading user:', action.payload.user_id)\n    }  catch (error) {\n        console.log('Error on update skater note:', error);\n    }\n}\n\n//this saga will update a coach_note on a skill_skater row\n//it will fire with every 'UPDATE_COACH_NOTE' action\nfunction* updateCoachNote(action){\n    try {\n        yield axios.put('/api/skater/coachnote',  {data: action.payload});\n        yield put({ type: 'GET_CURRICULUM', payload: action.payload.user_id });\n        console.log(`in update coach note saga`, action.payload);\n    }  catch (error) {\n        console.log('Error on update skater note:', error);\n    }\n}\n\n//this saga will delete a row from user_skill\n//it will fire with every 'DELETE_USER_SKILL' action\nfunction* deleteUserSkill(action){\n    try {\n        yield axios.delete('/api/skater/skill/'+ action.payload.id );\n        let user_id = action.payload.user_id;\n        yield put({ type: 'GET_CURRICULUM', payload: user_id });\n       //console.log('in deleteSaga with', action.payload)\n    }  catch (error) {\n        console.log('Error on update skater note:', error);\n    }\n}\n\n\n\nfunction* curriculumSaga() {\n  yield takeLatest('ASSIGN_SKILL', assignSkill);\n  yield takeLatest('GET_CURRICULUM', getCurriculum);\n  yield takeLatest('UPDATE_SKATER_NOTE', updateSkaterNote);\n  yield takeLatest('UPDATE_COACH_NOTE', updateCoachNote);\n  yield takeLatest('DELETE_USER_SKILL', deleteUserSkill);\n}\n\nexport default curriculumSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//this saga gets fired with every 'GET_SKILL_CATAGORY' action\nfunction* getJunction(){\n    try {\n       const response = yield axios.get('/api/category/skill');\n        yield put({ type: 'PUT_SKILL_CATEGORY', payload: response.data });\n    }  catch (error) {\n        console.log('Error with skill_category GET:', error);\n    }\n}\n\nfunction* postJunction(action){\n    try{\n        yield axios.post('/api/skill/category', action.payload);\n    }catch (error) {\n        console.log('Error with skill_category POST:', error);\n    }\n}\n\nfunction* deleteJunction(action){\n    try{\n        yield axios.delete('/api/skill/category', action.payload);\n    }catch (error) {\n        console.log('Error with skill_category DELETE:', error);\n    }\n}\n\n\n\nfunction* skillCategorySaga() {\n  yield takeLatest('GET_JUNCTION', getJunction);\n  yield takeLatest('POST_JUNCTION', postJunction);\n  yield takeLatest('DELTE_JUNCTION', deleteJunction);\n}\n\nexport default skillCategorySaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//this saga gets fired with every 'POST_SKILL' action\nfunction* updateSkill(action){\n    try {\n        yield axios.put('/api/skill/', action.payload);\n        yield put({ type: 'GET_ALL_SKILL' });\n    }  catch (error) {\n        console.log('Error with skill update:', error);\n    }\n}\n\n\n\nfunction* updateSkillSaga() {\n  yield takeLatest('UPDATE_SKILL', updateSkill);\n}\n\nexport default updateSkillSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"PUT_EMAIL\" actions\nfunction* updateEmail(action) {\n  try {\n    //update the user email in database/server\n    yield axios.put('/api/user/email', action.payload);\n    // get the newly updated user data\n    yield put({ type: 'FETCH_USER' });\n  } catch (error) {\n      console.log('Error with category get:', error);\n  }\n}\n\n// worker Saga: will be fired on \"PUT_BIO\" actions\nfunction* updateBio(action) {\n    try {\n      //update the user bio in database/server\n      yield axios.put('/api/user/bio', action.payload);\n      // get the newly updated user data\n      yield put({ type: 'FETCH_USER' });\n    } catch (error) {\n        console.log('Error with category get:', error);\n    }\n  }\n\n// worker Saga: will be fired on \"PUT_GOALS\" actions\nfunction* updateGoals(action) {\n    try {\n      //update the user goals in database/server\n      yield axios.put('/api/user/goals', action.payload);\n      // get the newly updated user data\n      yield put({ type: 'FETCH_USER' });\n    } catch (error) {\n        console.log('Error with category get:', error);\n    }\n  }\n\nfunction* profileSaga() {\n  yield takeLatest('PUT_EMAIL',updateEmail);\n  yield takeLatest('PUT_BIO', updateBio);\n  yield takeLatest('PUT_GOALS', updateGoals);\n}\n\nexport default profileSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"ADD_FOOTAGE\" actions\nfunction* postFootage(action) {\n  try {\n    //add new footage to the user_footage table\n    yield axios.post('/api/footage', action.payload);\n    // get the newly updated user footage rows\n    yield put({ type: 'FETCH_FOOTAGE' });\n  } catch (error) {\n      console.log('Error posting footage:', error);\n  }\n}\n\n// worker Saga: will be fired on \"FETCH_FOOTAGE\" actions\nfunction* getFootage() {\n    try {\n      //get all the footage rows from the user_footage table\n      const response = yield axios.get('/api/footage');\n      //store the footage data in the footage reducer\n      yield put({ type: 'SET_FOOTAGE', payload:response.data });\n    } catch (error) {\n        console.log('Error getting footage:', error);\n    }\n  }\n\n// worker Saga: will be fired on \"DELETE_FOOTAGE\" actions\nfunction* deleteFootage(action) {\n  try {\n   //delete a row from user_footage based on a row id\n    yield axios.delete('/api/footage/' + action.payload);\n    // get the newly updated user footage rows\n    yield put({ type: 'FETCH_FOOTAGE' });\n  } catch (error) {\n      console.log('Error deleting footage:', error);\n  }\n}\n\n\nfunction* footageSaga() {\n  yield takeLatest('ADD_FOOTAGE',postFootage);\n  yield takeLatest('FETCH_FOOTAGE', getFootage);\n  yield takeLatest('DELETE_FOOTAGE', deleteFootage);\n}\n\nexport default footageSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport categorySaga from './categorySaga';\nimport skillSaga from './skillSaga';\nimport skaterSaga from './skaterSaga';\nimport addSkillSaga from './addSkillSaga'\nimport curriculumSaga from './curriculumSaga';\nimport skillCategorySaga from './skillCategorySaga';\nimport updateSkillSaga from './updateSkillSaga';\nimport profileSaga from './profileSaga';\nimport footageSaga from './footageSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    categorySaga(),\n    skillSaga(),\n    skaterSaga(),\n    addSkillSaga(),\n    curriculumSaga(),\n    skillCategorySaga(),\n    updateSkillSaga(),\n    profileSaga(),\n    footageSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst LogOutButton = props => (\n  <Button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n  \n    color = \"secondary\"\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    <ExitToAppIcon/>\n    {'\\u00A0'} {'\\u00A0'}\n    Log Out\n  </Button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport { Toolbar, AppBar, List, ListItem, Drawer, Divider, ListItemIcon, ListItemText, IconButton} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AddIcon from '@material-ui/icons/Add';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst drawerWidth = 230;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: 'black',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: 20,\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  logout: {\n    marginLeft: '85%'\n  },\n  icon:{\n    height: 50,\n    width: 'auto',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n});\n\n\n\nclass Nav extends Component{\n  state = {\n    mobileOpen: false,\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n  render() {\n    const {classes} = this.props;\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n       {this.props.reduxState.user.id\n       ?\n        <List>\n        <ListItem button component = {Link} to =\"/profile\" >\n          <ListItemIcon>\n            <AccountCircleIcon/>\n          </ListItemIcon>\n            <ListItemText primary ={this.props.reduxState.user.username}/> \n        </ListItem>\n      </List>\n        :\n         <List>\n         <ListItem button component = {Link} to =\"/home\" >\n           <ListItemIcon>\n             <AccountCircleIcon/>\n           </ListItemIcon>\n            <ListItemText primary ='Log in'/> \n         </ListItem>\n       </List>     \n        }\n         <Divider />\n        {this.props.reduxState.user.is_coach && (\n          <>\n          <List>\n            <ListItem button component = {Link} to =\"/AssignList\" >\n            <ListItemIcon><AssignmentIcon/></ListItemIcon>\n              <ListItemText primary ='Assign Skills'/>\n            </ListItem>     \n            <ListItem button component = {Link} to = '/manage'>\n              <ListItemIcon><SupervisorAccountIcon/></ListItemIcon>\n              <ListItemText primary ='Manage Skaters'/>\n            </ListItem>     \n            <ListItem button component = {Link} to = '/EditSkill'>\n            <ListItemIcon>\n              <EditIcon/>\n            </ListItemIcon>\n              <ListItemText primary ='Edit Skills'/>\n            </ListItem>   \n          </List>\n          <Divider />\n        </>\n        )}\n         {this.props.reduxState.user.id && (\n          <>\n          <List>\n            <ListItem button component = {Link} to ='/profile'>\n            <ListItemIcon><PersonIcon/></ListItemIcon>\n              <ListItemText primary ='Profile'/>\n            </ListItem>\n            <ListItem button component = {Link} to = '/curriculum'>\n            <ListItemIcon><VideocamIcon/></ListItemIcon>\n              <ListItemText primary ='My Curriculum'/>\n            </ListItem>\n            <ListItem button component = {Link} to = '/AddSkill'>\n              <ListItemIcon><AddIcon/></ListItemIcon>\n              <ListItemText primary ='Add A Skill'/>\n            </ListItem>\n            <ListItem button component = {Link} to = '/footage'>\n              <ListItemIcon><AddAPhotoIcon/></ListItemIcon>\n              <ListItemText primary ='Add Footage of Myself'/>\n            </ListItem>\n          </List>\n          <Divider />\n        </>\n        )}\n        <List>\n          <ListItem button component = {Link} to = '/about'>\n              <ListItemIcon><InfoIcon/></ListItemIcon>\n              <ListItemText primary ='About'/>\n            </ListItem>\n          <ListItem >\n            <LogOutButton/>\n          </ListItem>\n        </List>\n      </div>\n    )\n    return (\n    <div className = {classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n              color=\"inherit\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n          </IconButton>\n          <div className = {classes.grow}> </div>\n          <h3>Jammer Coach</h3>\n          {'\\u00A0'}{'\\u00A0'}\n          <img className = {classes.icon} src = {require ('./favicon_white.png') }alt = 'roller skate icon'/>\n          \n          {/* <LogOutButton /> */}\n         \n        </Toolbar>\n      </AppBar>\n      <br/>\n      <br/>\n      <br/>\n      <nav className={classes.drawer}>\n            <Drawer\n              container={this.props.container}\n              anchor=\"left\"\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              {drawer}\n            </Drawer>\n        </nav>\n    </div>\n  );\n  }\n}\n\nNav.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\nexport default withStyles(styles)(connect(mapStateToProps)(Nav));\n","import React from 'react';\nimport './Footer.css'\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport Grid from '@material-ui/core/grid'\n// import TwitterIcon from '@material-ui/icons/Twitter';\n// import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    <Grid container>\n    <PhotoCameraIcon/> <i>by Ron Wilbur, and Workhorse Photography </i>\n    </Grid>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect, } from 'react-redux';\nimport {Button,  TextField, Grid, Paper,} from '@material-ui/core'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n      flexGrow: 1,\n      alignItems: 'center',\n      justify: 'center',\n      backgroundImage: 'url(https://s3.amazonaws.com/ezusrevent/EFBB7EBD90553C784141DD8D25197029D540EE1F92DAF3EC12.jpg)',\n      height: \"1365px\",\n      backgroundRepeat: 'no-repeat',\n      backgroundColor: 'black',\n      backgroundPosition:'4%, 96%',\n      \n  },\n  paper: {\n      width: '100%',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      justify: 'center',\n      margin: '0px',\n      borderRadius: '5px'\n  },\n  textFeld:{\n      width: 300,\n  },\n  longField:{\n      width: '85%',\n  },\n  login:{\n    fontFamily: 'Sans-serif',\n    fontSize: '60px',\n    width: '100%',\n    padding: theme.spacing(1),\n    margin:0\n  }\n\n});\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className = {classes.root}>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )\n        }\n          <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs = {12} sm = {8} md = {5} lg = {4} xl = {3}>\n              <Paper className = {classes.paper}>\n                <form onSubmit={this.login}>\n                  <h1 className = {classes.login}>LOG IN</h1>\n                  <i>Ready for practice?</i>\n                  <br/>\n                    <TextField \n                    label = \"username\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleInputChangeFor('username')}/>     \n                  <div>\n                      <TextField\n                        type=\"password\"\n                        name=\"password\"\n                        label = \"password\"\n                        value={this.state.password}\n                        onChange={this.handleInputChangeFor('password')}\n                      />\n                \n                  </div>\n                  <div>\n                    <br/>\n                    <Button\n                      onClick ={this.login}\n                      name=\"submit\"\n                      value=\"Log In\"\n                      variant = \"contained\"\n                      color = \"primary\"\n                    >\n                      Log in\n                    </Button>\n                  </div>\n                  <br/>   \n                    <i>New skater? </i>\n                    {'\\u00A0'} {'\\u00A0'}\n                  <Button \n                    variant = 'outlined' color = \"primary\"\n                    onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n                  >\n                    Register Here\n                  </Button> \n                </form>\n              </Paper>\n            </Grid>\n          </Grid>\n        <br/>\n        <br/>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nLoginPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(LoginPage));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {Button, TextField, InputLabel, MenuItem, Select, FormControl, Grid, Paper} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n      flexGrow: 1,\n      alignItems: 'center',\n      justify: 'center',\n      backgroundImage: 'url(https://images.squarespace-cdn.com/content/v1/54af52d4e4b0fb47dcafee40/1582580047535-8LZI1NFQYO9RLX8BMQ61/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/A+bout+to+Glow?format=1500w)',\n      height: \"1300px\",\n      backgroundRepeat: 'no-repeat',\n      //backgroundAttachment: 'fixed',\n      backgroundColor: 'black',\n      backgroundPosition:'28%, bottom',\n      backgroundSize: 'cover',\n      \n  },\n  paper: {\n      width: '100%',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      justify: 'center',\n      margin: '0px',\n      borderRadius: '5px'\n  },\n  textFeld:{\n      width: 300,\n  },\n  longField:{\n      width: '85%',\n  },\n  login:{\n    fontFamily: 'Sans-serif',\n    fontSize: '60px',\n    width: '100%',\n    padding: theme.spacing(1),\n    margin:0\n  },\n  formControl:{\n    width: '100px'\n  }\n\n});\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    is_coach: false,\n    email: ''\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n          is_coach: this.state.is_coach,\n          email: this.state.email\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className = {classes.root}>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <Grid container\n          justify=\"center\"\n          alignItems=\"center\"\n          direction = \"row\">\n          <Grid item xs = {12} sm = {8} md = {6} lg = {4} xl = {3}>\n            <Paper className = {classes.paper}>\n              <form>\n                <h1 className = {classes.login}>NEW USER</h1>\n                <Grid container\n                direction= \"row\"\n                alignItems=  \"baseline\"\n                justify = \"center\">\n                <i>Are you a coach?</i>\n                {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}\n                <FormControl>\n                  <InputLabel>user type</InputLabel>\n                  <Select\n                      value = {this.state.is_coach}\n                      onChange={this.handleInputChangeFor('is_coach')}\n                      width = '100px'\n                      inputProps={{\n                          name: 'is_coach'  \n                      }}>\n                          <MenuItem value = {true}>Coach</MenuItem>\n                          <MenuItem value = {false}>Skater</MenuItem>\n                      </Select>\n                  </FormControl>\n              </Grid>\n              {/* <br/> */}\n              <TextField\n                  name= 'username'\n                  label = 'username'\n                  value = {this.state.username}\n                  onChange = {this.handleInputChangeFor('username')}/>\n                {'\\u00A0'} {'\\u00A0'}{'\\u00A0'} {'\\u00A0'}\n                <TextField\n                  name= 'password'\n                  label = 'password'\n                  type=\"password\"\n                  value = {this.state.password}\n                  onChange = {this.handleInputChangeFor('password')}/>\n                  <br/>\n                <TextField\n                  name= 'email'\n                  label = 'email address'\n                  value = {this.state.email}\n                  onChange = {this.handleInputChangeFor('email')}\n                  className = {classes.longField}/>\n                  <br/>\n                  <br/>\n                  <Button\n                    color = 'primary'\n                    variant = 'contained'\n                    onClick = {this.registerUser}>\n                    Register\n                  </Button>\n                  {'\\u00A0'} {'\\u00A0'} \n                  <Button\n                    color = 'primary'\n                    variant = 'outlined'\n                    onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}} >\n                    log in\n                  </Button> \n                </form>\n              </Paper>\n           </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nRegisterPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(RegisterPage));\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n// this will also check if a user is a coach\n\nconst CoachRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id && user.is_coach) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(CoachRoute)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Paper, } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport paxos from './paxos.jpg';\n\nconst styles = theme => ({\n  root: {\n      flexGrow: 1,\n      alignItems: 'center',\n      justify: 'center',\n      backgroundColor: '#923cb5',\n      backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n      backgroundAttachment: 'fixed',\n      minHeight: '800px'\n      \n  },\n  paper: {\n      width: '100%',\n      padding: theme.spacing(3),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      justify: 'center',\n\n  },\n  img:{\n    maxWidth: '100%'\n  }\n});\n\nclass AboutPage extends Component {\n  \n\n \n  render() {\n    const {classes} = this.props;\n    return (\n      <div className = {classes.root}>\n        <br/>\n        <Grid container\n          direction = 'row'\n          justify = 'center'\n          alignItems = \"center\"\n          spacing = {2}>\n            <Grid item xs = {12} sm = {11} md = {10}>\n              <Paper className = {classes.paper}>\n                <i>This app was built using react.js, Material-UI,\n                  Redux, Sagas, Express, Node, PostgreSql, and React-Player\n                </i>\n                <h3>Thank You, Prime Digital Academy, and Paxos Cohort</h3>\n                <img  className = {classes.img }src = {paxos}\n                  alt = 'paxos parakeet'/>\n                <h1>BIRD UP!</h1>\n              </Paper>\n            </Grid>\n         <br/>\n         </Grid>\n      </div>\n    );\n  }\n}\n\nAboutPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(AboutPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from \"../LogOutButton/LogOutButton\";\nimport {Button, Paper, Grid, TextField} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditIcon  from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n\n\nconst styles = theme => ({\n  root: {\n      flexGrow: 1,\n      alignItems: 'center',\n      justify: 'center',\n      backgroundColor: '#923cb5',\n      backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n      backgroundAttachment: 'fixed',\n      minHeight: '800px'\n      \n  },\n  paper: {\n      width: '90%',\n      padding: theme.spacing(3),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      justify: 'center',\n  },\n  textFeld:{\n      width: 300,\n  },\n  longField:{\n      width: '85%',\n  },\n  categoryList:{\n      listStyle: 'inside',\n  }\n});\n\nclass UserPage extends Component {\n  state = {\n    email: this.props.user.email || '',\n    bio: this.props.user.bio || '',\n    goals: this.props.user.goals || '',\n    editEmail: false,\n    editBio: false,\n    editGoals: false, \n  }\n\n  componentDidMount(){\n    //this.props.dispatch({type: 'FETCH_USER'})\n    if(this.props.user.email){\n      this.setState({\n        ...this.state,\n        email: this.props.user.email\n      })\n    }\n    if(this.props.user.bio){\n      this.setState({\n        ...this.state,\n        bio: this.props.user.bio\n      })\n    }\n    if(this.props.user.goals){\n      this.setState({\n        ...this.state,\n        goals: this.props.user.goals\n      })\n    }\n  }\n\n  //this checks for updates made in redux and sets it to state\n  componentDidUpdate(previousProps){\n    if (previousProps.user.email !== this.props.user.email){\n        this.setState({\n            ...this.state,\n            email: this.props.user.email,\n        })\n    }\n    if (previousProps.user.bio !== this.props.user.bio){\n      this.setState({\n          ...this.state,\n          bio: this.props.user.bio,\n      })\n    }\n    if (previousProps.user.goals !== this.props.user.goals){\n      this.setState({\n          ...this.state,\n          goals: this.props.user.goals,\n      })\n  }\n}\n\n  handleChange = (event) => {\n    this.setState({\n        ...this.state,\n       [event.target.name]: event.target.value });\n  };\n\n  handleEditEmail = (event) =>{\n    this.setState({\n      ...this.state,\n      editEmail: true,\n    })\n  }\n\n//creates an object of the user's id and new email address and\n//uses it to update the user row in the email column\n  saveEmail = () => {\n    //dispatch Saga to UPDATE EMAIL\n    const putObject = {\n      email: this.state.email,\n      id: this.props.user.id,\n    }\n    this.props.dispatch({type: 'PUT_EMAIL', payload: putObject})\n    this.setState({\n      ...this.state,\n      editEmail: false,\n    })\n  }\n\n  editBio = () => {\n    this.setState ({\n      ...this.state,\n      editBio: true,\n    })\n  }\n\n\n  //saveBio creates an object containing the user id and new bio\n  //and uses it to update the user row in the bio column\n  saveBio = () => {\n    const putObject = {\n      bio: this.state.bio,\n      id: this.props.user.id,\n    }\n    //dispatch Saga to UPDATE BIO\n    this.props.dispatch({type: 'PUT_BIO', payload: putObject})\n    //set back to Not edit\n    this.setState({\n      ...this.state,\n      editBio:false,\n    })\n  }\n\n  editGoals = () => {\n    this.setState ({\n      ...this.state,\n      editGoals: true,\n    })\n  }\n\n  //saveGoals creates an object from the new goals and user id and\n  //dispatches a saga to update the user row in the goals column\n  saveGoals = () => {\n    const putObject = {\n      goals: this.state.goals,\n      id: this.props.user.id,\n    }\n    //dispatch Saga to UPDATE BIO\n    this.props.dispatch({type: 'PUT_GOALS', payload: putObject})\n    //set back to Not edit\n    this.setState({\n      ...this.state,\n      editGoals:false,\n    })\n  }\n\n\n  \n  render() {\n    const {classes} = this.props;\n    return (\n      <div className = {classes.root}>\n         <br/>\n         <br/>\n        <Grid container direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing = {4}>\n         \n          <Paper className ={classes.paper}>\n          <h1 id=\"welcome\">\n          {this.props.user.username}'s \n          {this.props.user.is_coach? <b> Coach </b> : <b> Skater </b>} Profile\n          </h1>\n            {this.state.editEmail? \n            <Grid  container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-end\">\n               <TextField\n                label=\"email\"\n                name='email'\n                value = {this.state.email}\n                onChange = {this.handleChange}\n                className={classes.textField}\n                margin=\"normal\"/>\n                {'\\u00A0'}{'\\u00A0'}\n              <Button variant = \"outlined\" color = \"primary\"\n                onClick = {this.saveEmail}>\n                <SaveAltIcon/>\n                Save Email\n              </Button>\n            </Grid>\n            :\n            this.state.email ? \n            <Grid  container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n              <i>Your Email address is saved as <b>{this.state.email}</b></i>\n              {/* {'\\u00A0'}{'\\u00A0'} */}\n              <br/>\n              <Button \n               onClick = {this.handleEditEmail}>\n                <EditIcon/>\n                Edit Email\n              </Button>\n             </Grid>\n             :\n             <Grid  container\n             direction=\"column\"\n             justify=\"center\"\n             alignItems=\"center\">\n              <i>Please add an email address</i>\n              {/* {'\\u00A0'}{'\\u00A0'} */}\n              <br/>\n              <Button variant = \"outlined\" color = \"secondary\"\n                onClick = {this.handleEditEmail}>\n                <AddIcon/>\n                Add Email\n              </Button>\n             </Grid>\n            }\n            <br/>\n            {this.state.editBio ?\n             <Grid  container\n             direction=\"column\"\n             justify=\"center\"\n             alignItems=\"center\">\n              <i>Tell us a little about yourself</i>\n              {/* {'\\u00A0'}{'\\u00A0'} */}\n              {/* <br/> */}\n              <TextField\n                label=\"My Bio\"\n                name ='bio'\n                value = {this.state.bio}\n                onChange = {this.handleChange}\n                multiline\n                rowsMax=\"6\"\n                className={classes.longField}\n                margin=\"normal\"\n                />\n              <Button variant = \"outlined\" color = \"primary\"\n                onClick = {this.saveBio}>\n                <SaveAltIcon/>\n                Save Bio\n              </Button>\n             </Grid>\n            :\n            this.state.bio?\n            <Grid  container\n             direction=\"column\"\n             justify=\"center\"\n             alignItems=\"center\">\n                <h3>My Saved Bio</h3>\n                <p>{this.state.bio}</p>\n                <Button\n                  onClick = {this.editBio}\n                >\n                  <EditIcon/>\n                  Edit bio\n                </Button>\n            </Grid>\n            :\n            <Grid  container\n             direction=\"column\"\n             justify=\"center\"\n             alignItems=\"center\">\n               <i>Please add a bio to tell us about yourself</i>\n               <br/>\n               <Button variant = 'outlined' color = 'secondary'\n                  onClick = {this.editBio}>\n                  <AddIcon/>\n                  Add Bio\n               </Button>\n            </Grid>\n            }\n            <br/>\n            {this.state.editGoals?\n            <Grid  container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n             <i>What are your Goals for the season?</i>\n             {/* {'\\u00A0'}{'\\u00A0'} */}\n             {/* <br/> */}\n             <TextField\n               label=\"My Goals\"\n               name ='goals'\n               value = {this.state.goals}\n               onChange = {this.handleChange}\n               multiline\n               rowsMax=\"6\"\n               className={classes.longField}\n               margin=\"normal\"\n               />\n             <Button variant = \"outlined\" color = \"primary\"\n               onClick = {this.saveGoals}>\n               <SaveAltIcon/>\n               Save Goals\n             </Button>\n            </Grid>\n           :\n           this.state.goals?\n           <Grid  container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n               <h3>My Season Goals</h3>\n               <p>{this.state.goals}</p>\n               <Button\n                 onClick = {this.editGoals}\n               >\n                 <EditIcon/>\n                 Edit Goals\n               </Button>\n           </Grid>\n            :\n            <Grid  container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\">\n              <i>Please tell us your goals for the season</i>\n              <br/>\n              <Button variant = 'outlined' color = 'secondary'\n                 onClick = {this.editGoals}>\n                <AddIcon/>\n                 Add Goals\n              </Button>\n           </Grid> \n            }\n            <p>Your ID is: {this.props.user.id}</p>\n            <LogOutButton className=\"log-in\" />\n          </Paper>\n        </Grid>\n        <br/>\n      </div>\n    );\n  }\n}\n\nUserPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(UserPage));\n","import React, {Component} from 'react';\nimport {Button, Paper, TextField, Grid, InputLabel, MenuItem, Select, ListSubheader, Divider, } from '@material-ui/core';\nimport {FormControl, Snackbar, IconButton, List, ListItem, ListItemText,  ListItemIcon} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n        justify: 'center',\n        backgroundColor: '#923cb5',\n        backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n        height: '800px',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(3),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        justify: 'center',\n    },\n    textFeld:{\n        width: 200,\n    },\n    longField:{\n        width: '90%',\n    },\n    categoryList:{\n        alignItems: \"flex-start\",\n        allignContent: 'center',\n        // border: 'ridge'\n    }\n  });\n\nclass AddSkill extends Component {\n  state = {\n    title:'',\n    author:'',\n    url:'',\n    description:'',\n    thisCategory: [],\n    category: '',\n    lastTitle: '',\n    submitted: false,\n    };\n\n    componentDidMount(){\n        //dispatch saga to fetch categories\n        this.props.dispatch({type: 'GET_CATEGORY'})\n    }\n\n    handleChange = (event) => {\n        this.setState({ \n            ...this.state,\n            [event.target.name]: event.target.value });\n      };\n\n    handleAdd = ()=>{\n        let array = this.state.thisCategory;\n        let newCategory = this.state.category;\n        //check if a unique category has been selected\n        //skills can have multiple cateogories, but only needs a category once\n        if (newCategory !== ''){\n            for(let i=0; i<array.length; i++){\n                if (array[i] === newCategory){\n                    console.log('match found')\n                    return;\n                }\n            }\n            array.push(newCategory);\n        //sets our state back to empty category input, \n        //and updates our thisCategory array\n        this.setState({\n            ...this.state,\n            thisCategory: array,\n            category:'',\n        })//end setState\n        }   \n    }//end handleAdd\n\n    handleRemove = (id) => (event) =>{\n        console.log('remove', id);\n        let array = this.state.thisCategory;\n        array.splice(id, 1);\n        this.setState({\n            ...this.state,\n            thisCategory: array\n        })//end setStae\n    }//end handleRemove\n\n    handleSubmit = () =>{\n        const submitObject = {\n            title: this.state.title,\n            author: this.state.author,\n            url: this.state.url,\n            categories: this.state.thisCategory,\n            description: this.state.description,\n        }\n        console.log('object to post:', submitObject);\n        //dispatch a saga to post submitObject\n        if (submitObject.title&&submitObject.url){\n        this.props.dispatch({type: 'POST_SKILL', payload: submitObject})\n        }\n        //reset state and throw confirm\n        this.setState({\n            title:'',\n            author:'',\n            url:'',\n            description:'',\n            thisCategory: [],\n            category: '',\n            lastTitle: submitObject.title,\n            submitted: true,  \n        })\n    }\n\n    handelOk = (event, reason) =>{\n        if (reason === 'clickaway') {\n            return;\n          } else { \n              this.setState({\n            ...this.state,  \n            submitted: false,})\n        }\n    }\n\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n          <br/>\n           <Grid container\n           direction = \"row\"\n           alignItems = \"center\"\n           justify = 'center'\n           >\n            <br/>\n            <Grid item xs = {12} md = {11} lg = {10} >\n                <Paper className = {classes.paper}>\n                    <h1>Add A Skill</h1>\n                    {/* Eventually, this next bit should be conditional upon user != coach */}\n                    <p><i>Note: skill videos are accessable by all users</i></p>\n                    {/* A link to the add self footage page will appear here if the user is not a coach */}\n                    <TextField\n                    id=\"title-in\"\n                    label=\"*Title\"\n                    name='title'\n                    value = {this.state.title}\n                    onChange = {this.handleChange}\n                    className={classes.textField}\n                    margin=\"normal\"/>\n                    {'\\u00A0'}{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                    <TextField\n                    id=\"author-in\"\n                    label=\"Trainer\"\n                    name='author'\n                    value = {this.state.author}\n                    onChange = {this.handleChange}\n                    className={classes.textField}\n                    margin=\"normal\"/>\n                    <TextField\n                    id=\"url-in\"\n                    label=\"*Video Url\"\n                    name='url'\n                    value = {this.state.url}\n                    onChange = {this.handleChange}\n                    className={classes.longField}\n                    margin=\"normal\"/>\n                    <br/>\n                    <br/>\n                    <Grid container\n                        alignItems = \"center\"\n                        justify = 'center'\n                        alignContent = 'center'\n                        spacing = {0}\n                    >\n                        <Grid item xs = {12} sm = {6}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"age-simple\">Categories</InputLabel>\n                                {/* Inputs all controlled*/}\n                                <Select\n                                    value = {this.state.category}\n                                    onChange={this.handleChange}\n                                    inputProps={{\n                                        name: 'category',\n                                        id: 'category-in',  \n                                    }}>\n                                    <MenuItem value=\"\">\n                                    <em></em>\n                                    </MenuItem>\n                                    {/* categories populated by reduxState */}\n                                    {this.props.reduxState.category.map((category) =>(\n                                        <MenuItem value={category} key ={category.id}>{category.name}</MenuItem>\n                                    ))}\n                                </Select>\n                                <Button color = \"primary\" onClick = {this.handleAdd} variant = 'contained'>\n                                   <AddIcon/>\n                                    Add Category\n                                </Button>\n                            </FormControl>\n                        </Grid>\n                        {/* {'\\u00A0'}{'\\u00A0'}{'\\u00A0'} */}\n                        <Grid item xs = {12} sm = {6} >\n                        {this.state.thisCategory.length \n                        ?  \n                            <List className = {classes.categoryList}\n                            subheader = {<ListSubheader>Selected Categories</ListSubheader>} >\n                                {this.state.thisCategory.map((category, index)=>(\n                                <div key = {category.id}>\n                                    <ListItem>\n                                        <ListItemText primary ={category.name} />\n                                        {'\\u00A0'}\n                                        <ListItemIcon button = '' onClick = {this.handleRemove(index)} >\n                                            <DeleteIcon color = 'secondary'/>\n                                        </ListItemIcon>  \n                                    </ListItem> \n                                    <Divider/>\n                                </div>\n                                ))}\n                            </List>\n                            :\n                                <center>\n                                    <i>Click 'add category'</i>{'\\u00A0'}\n                                    <br/>\n                                    <i> to include selected category</i>\n                                </center>\n                            }\n                        </Grid>\n                    </Grid>\n                    <TextField\n                        id=\"standard-multiline-flexible\"\n                        label=\"Description\"\n                        name ='description'\n                        value = {this.state.description}\n                        onChange = {this.handleChange}\n                        multiline\n                        rowsMax=\"4\"\n                        className={classes.longField}\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <br/>\n                    {(this.state.title&& this.state.url) ?\n                        <Button variant ='contained' color = 'primary' size = \"large\" onClick = {this.handleSubmit}>\n                           <SaveAltIcon/>\n                            Submit\n                        </Button>\n                            :\n                        <Button variant ='contained' disabled size = \"large\">\n                            <SaveAltIcon/>\n                            Submit\n                        </Button>\n                    }\n                </Paper> \n            </Grid>\n        </Grid>\n        {/* This snackbar lets a user know they have submitted a new skill */}\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.submitted}\n          autoHideDuration={6000}\n          onClose={this.handelOk}\n          variant=\"success\"\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">\n                Successfully submitted {this.state.lastTitle}\n              </span>}\n          action={[\n            <IconButton\n              color=\"inherit\"\n              onClick={this.handelOk}\n              key=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nAddSkill.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(AddSkill));","import React, {Component} from 'react';\nimport {Button, Paper, TextField, InputLabel, MenuItem, Select, FormControl, Grid, Snackbar, IconButton} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player/lazy'\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\n\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n        justify:'center,'\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        justify: 'center'\n    },\n    video :{\n        maxWidth: '100%',\n    },\n    formControl: {\n        minWidth: 200,\n    },\n    longField:{\n        width: '85%',\n    },\n    success: {\n        backgroundColor: green[600],\n      },\n  });\n\nclass AssignListItem extends Component {\n  state = {\n    selected: '',\n    notes: '',\n    submitted: false,\n    lastSelected: '',\n    favorite: false,\n    };\n\n    componentDidMount(){\n        //dispatch saga to fetch username list\n        //displatch saga to fetch skaters\n        this.props.dispatch({type: 'GET_SKATER'}) \n        this.setState({\n            ...this.state,\n            favorite: this.props.skill.favorite\n        })\n    }\n  \n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n\n    handleAssign =()=>{\n       const postObject = {skill_id: this.props.skill.id,\n                            user_id: this.state.selected.id,\n                            coach_notes: this.state.notes }\n       console.log(postObject);\n       //call saga to POST postobject to user_skill\n       this.props.dispatch({type: 'ASSIGN_SKILL', payload: postObject}) \n       //alert user of successful assign\n       this.setState({\n            lastSelected: this.state.selected.username,\n            selected: '',\n            notes: '',\n            submitted: true,})\n    }\n\n    //this handler banashes the snackbar\n    handleOk = (event, reason) =>{\n        if (reason === 'clickaway') {\n            return;\n          } else { \n              this.setState({\n            ...this.state,  \n            submitted: false,})\n        }\n    }\n\n    handleFavorite = () => {\n        this.setState({\n            ...this.state,\n            favorite: !this.state.favorite,\n        })\n        //dispatch a toggle saga \n        const id = this.props.skill.id;\n        this.props.dispatch({type:'FAVORITE_SKILL', payload: id})\n    }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n         <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing = {4}>\n             <Grid item xs = {12} md ={11} xl = {10}>         \n                <Paper className = {classes.paper}>\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing = {1}>\n                        <Grid item xs = {12} md = {8}>\n                            <Grid container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                <ReactPlayer url= {this.props.skill.url} \n                                    controls = {true} \n                                    alt = {this.props.skill.description} \n                                    className = {classes.video}/> \n                            </Grid>\n                        </Grid>\n                    <Grid item xs = {12} md = {4}> \n                        <Grid container\n                            direction=\"row\"\n                            justify=\"flex-end\"\n                            alignItems=\"flex-start\"\n                            spacing = {0}>\n                                <Checkbox icon={<FavoriteBorder />} \n                                    checkedIcon={<Favorite />} \n                                    value={this.state.favorite}\n                                    onChange= {this.handleFavorite}\n                                    checked = {this.state.favorite} />      \n                        </Grid>\n                        <h2>{this.props.skill.title}</h2>\n                        <FormControl className={classes.formControl}>     \n                        <InputLabel>Skater</InputLabel>\n                            <Select\n                                value = {this.state.selected}\n                                onChange={this.handleChange}\n                                inputProps={{\n                                    name: 'selected', \n                                }}>\n                                    <MenuItem value=\"\">\n                                    <em></em>\n                                    </MenuItem>\n                                    {/* populates list with all usernames from redux state */}\n                                    {this.props.reduxState.allSkater.map((skater) =>(\n                                        <MenuItem value={skater} key ={skater.id}>{skater.username}</MenuItem>\n                                    ))}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            label=\"Notes\"\n                            name ='notes'\n                            value = {this.state.notes}\n                            onChange = {this.handleChange}\n                            multiline\n                            rowsMax=\"4\"\n                            className={classes.longField}\n                            margin=\"normal\"\n                            />\n                            <br/>\n                            <br/>\n                            <br/>\n                        <Button variant = 'contained' color = 'primary' onClick = {this.handleAssign}>\n                            Assign Skill\n                        </Button>\n                    </Grid>\n                  </Grid>\n                </Paper>\n             </Grid>  \n          </Grid>\n          {/* This snackbar lets a use know they have assigned a skill */}\n          <Snackbar className = {classes.success}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.submitted}\n          autoHideDuration={6000}\n          onClose={this.handleOk}\n          cvariant=\"success\"\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">\n                Successfully assigned to {this.state.lastSelected}'s curriculum\n              </span>}\n          action={[\n            <IconButton\n              color=\"inherit\"\n              onClick={this.handleOk}\n              key=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nAssignListItem.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(AssignListItem));","import React, {Component} from 'react';\nimport {Button, Paper, Grid, InputLabel, MenuItem, Select, FormControl} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport AssignListItem from '../AssignListItem/AssignListItem';\nimport { Link } from 'react-router-dom';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n        backgroundColor: '#923cb5',\n        backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n        backgroundAttachment: 'fixed',\n        minHeight: '800px',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(3),\n        textAlign: 'center',\n        color: theme.palette.text.secondary, \n        margin: 2   \n    },\n    grid: {\n        alignItems: 'flex-end',\n        justify: 'center',\n    },\n    formControl:{\n        width: 200\n    },\n    paper2: {\n        width: '100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary, \n        margin: 2   \n    },\n  });\n\nclass AssignList extends Component {\n  state = {\n    selectedCategory: '',\n    viewing: '',\n    };\n\n    componentDidMount(){\n        //dispatch saga to fetch categories\n        this.props.dispatch({type: 'GET_CATEGORY'})\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    \n    handleViewCategory = () => {\n        this.setState({\n            ...this.state,\n            viewing: this.state.selectedCategory.name\n        })\n        console.log('selcted category id:', this.state.selectedCategory.id)\n        //dispatch saga to get all skill_category JOIN skill where id = category.id\n        //set results to state\n        this.props.dispatch({type:'GET_SKILL_CATEGORY', payload: this.state.selectedCategory.id})\n    }\n\n    handleViewAll = () => {\n        this.setState({\n            ...this.state,\n            viewing: 'all skills',\n        })\n        //dispatch saga to get ALL THE SKILLS\n        this.props.dispatch({type: 'GET_ALL_SKILL'})\n    }\n  \n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n          <br/>\n          <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing = {2}>\n            <Grid item  xs = {12} md = {11} lg = {10}>\n                <Paper className = {classes.paper}>\n                    <h1>Assign Skills</h1>\n                    <Grid  container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\">\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"age-simple\">Category</InputLabel>\n                            <Select\n                                value = {this.state.selectedCategory}\n                                onChange={this.handleChange}\n                                inputProps={{\n                                    name: 'selectedCategory',\n                                    id: 'category-in',  \n                                }}>\n                                    <MenuItem value=\"\">\n                                    <em></em>\n                                    </MenuItem>\n                                    {/* TO DO: CHANGE this.state.allcategory to the category reducer props */}\n                                    {this.props.reduxState.category.map((category, index) =>(\n                                        <MenuItem value={category} key ={index}>{category.name}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            {this.state.selectedCategory ?\n                            <Button color = \"primary\" variant = \"outlined\" onClick = {this.handleViewCategory}>\n                                    View category\n                                </Button>\n                            :\n                            <Button  disabled variant = \"outlined\"> \n                                    View category\n                                </Button>\n                            }   \n                            {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}\n                            <Button variant = 'outlined' color = 'primary' onClick = {this.handleViewAll}>\n                                <AllInclusiveIcon/>\n                                View All Skills\n                            </Button>\n                        </Grid>\n                        \n                        {this.state.viewing ? <h2> Viewing {this.state.viewing}</h2> :\n                        ''}\n                 </Paper>\n            </Grid>\n          </Grid>\n            {this.state.viewing ? \n            this.props.reduxState.skill.length > 0 ?\n            this.props.reduxState.skill.map((item) =>\n            (<AssignListItem skill = {item} key = {item.id}/>)) \n            : \n            <Grid container direction = 'column' \n                justify=\"center\"\n                alignItems=\"center\"\n                spacing = {2}>\n                <Grid item xs = {12} lg = {9} xl = {7}>\n                <Paper className = {classes.paper2}>\n                    <h3>sorry, there are no {this.state.viewing} skill videos yet...\n                    {'\\u00A0'} {'\\u00A0'}\n                    <Link to = '/AddSkill'>Add Some here</Link></h3>\n                </Paper>\n                </Grid>\n            </Grid>\n            :\n                ''}\n          <br/>\n      </div>\n    );\n  }\n}\n\nAssignList.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(AssignList));","import React, {Component} from 'react';\nimport {Button, Paper, TextField, InputLabel, MenuItem, Select, FormControl, Grid, Dialog, DialogContent, DialogContentText, DialogActions} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player/lazy';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n        justify: 'center'\n    },\n    paper: {\n        width: '100%' ,\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    video :{\n        maxWidth: '100%',\n        width: '200px',\n        maxHeight: '225px',\n    },\n    formControl: {\n        minWidth: 100,\n    },\n    longField:{\n        width: '85%',\n    },\n    smallList:{\n        margins: '2px',\n        padding: '1px',\n        listStyle:'none',\n    }\n  });\n\nclass EditSkillItem extends Component {\n    state = {\n        edit: false,\n        title:'',\n        author:'',\n        url: '',\n        description:'',\n        thisCategory:'',\n        viewCategories: [],\n        addCategories: [],\n        deleteCategories: [],\n        open: false,\n    }\n\n    componentDidMount(){\n       // dispatching a saga to get all the skill_catagory   \n      this.setCatagories();\n      const skill = this.props.skill;\n      this.setState({\n          ...this.state.categories,\n          title: skill.title,\n          author: skill.author,\n          url: skill.url,\n          description: skill.description,\n      })\n    }\n    \n    setCatagories = () =>{\n      let array = [];\n      let junction = this.props.reduxState.skillCategory;\n      const id =this.props.skill.id;\n      for (let i =0; i<junction.length; i++){\n          if (junction[i].skill_id === id){\n              array.push({\n                  id: junction[i].category_id,\n                  name: junction[i].name   \n                })\n          }//end if\n      }//end for\n    // console.log(array)\n     this.setState({\n         ...this.state,\n         viewCategories:array,\n     })\n    }//end setCatagories\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n\n    //set component to edit mode\n    handleEditTrue = () =>{\n        this.setState({\n            ...this.state,\n            edit: true,\n        })\n    }\n\n    handleEditFalse = () =>{\n        this.setState({\n            ...this.state,\n            edit: false,\n        })\n    }\n\n    //create objects for posting and deleting skill_categories\n    //and dispatch sagas to make the server calls\n    handleSave = () =>{\n        const addObject = {\n            categories: this.state.addCategories,\n            id: this.props.skill.id\n        };\n        const deleteObject = {\n            categories: this.state.deleteCategories,\n            id: this.props.skill.id,};\n        const updateObject = {\n            title: this.state.title,\n            url: this.state.url,\n            author: this.state.author,\n            description: this.state.description,\n            id: this.props.skill.id,\n        }\n        console.log('deleting:', deleteObject,\n         'adding:', addObject, \n         'updating:', updateObject );\n\n        //dispatch Saga to make UPDATE call\n        this.props.dispatch({type: 'UPDATE_SKILL', payload: updateObject});\n        //dispatch POST to skill_category if addCategories is truthy\n        if(addObject){\n        this.props.dispatch({type:'POST_JUNCTION', payload:addObject});\n        }\n        //dispatch DELETE from skill_category if deleteCategories is truthy\n        if(deleteObject){\n        this.props.dispatch({type:'DELETE_JUNCTION', payload: deleteObject})\n        }\n        //dispatch the GET skill_category saga to show changes\n        this.props.dispatch({type:'GET_JUNCTION'});\n        //\"flip\" the card\n        this.setState({\n            ...this.state,\n            edit: false,\n        })\n    }\n\n    //this function both displays a category and adds it to the add array if it's \n    //not alreay part of the add or view arrays, we will POST the add aray on submit\n    handleAdd = () =>{\n        const newCat = this.state.thisCategory;\n        const viewArray = this.state.viewCategories;\n        const addArray = this.state.addCategories;\n        let notView = true\n        let notAdd = true\n        //check if it's already viewed on the DOM, (view Array)\n        //if it's not in the viewCategories array, add it to that so it displays\n        //console.log(viewArray)\n        for (let i=0; i<viewArray.length; i++){\n            if (viewArray[i].id ===newCat.id)\n               {\n                notView = false;\n            }\n        }\n        if (notView&&newCat){viewArray.push(newCat)}\n        //check if it's already set up to be added (add Array)\n        //if it's not in the view array or add array, add it to the add array\n        for (let i=0; i<addArray.length; i++){\n            if (addArray[i].id === newCat.id){\n              //  console.log('match found')\n                notAdd = false;\n            }\n        }\n        if (newCat&&notView&notAdd){addArray.push(newCat)}\n        //set state to reflect changes\n        this.setState({\n            ...this.state,\n            viewCategories: viewArray,\n            addCategories: addArray,\n            thisCategory:'',\n        })\n       // console.log(addArray);\n    }\n \n    //handleRemove will remove a category from the dom and set it up\n    //to be deleted from skill_catagory on save, or removed from the\n    //add array if it was set to be posted on save\n    handleRemove = (thisCat) =>(event) =>{\n       // console.log(thisCat);\n        const viewArray = this.state.viewCategories;\n        const addArray = this.state.addCategories;\n        const deleteArray = this.state.deleteCategories;\n        let inAdd = false\n        //remove it from viewCategories so it doesn't display\n        for (let i=0; i<viewArray.length; i++){\n            if (viewArray[i]===thisCat){\n                viewArray.splice(i, 1)\n            }\n        }\n        //if it is in the add array, remove it\n        for (let i=0; i<addArray.length; i++){\n            if (addArray[i] ===thisCat){\n                addArray.splice(i, 1)\n                inAdd = true;\n            }\n        }\n        //if it is not in the add array, add it to the delete array\n        if(!inAdd){deleteArray.push(thisCat)};\n        //setState to 'save changes'\n        this.setState({\n            ...this.state,\n            deleteCategories: deleteArray,\n            addCategories: addArray,\n            viewCategories: viewArray,\n        })\n    } \n    \n    handleClickOpen = () => {\n        this.setState({ ...this.state, open: true });\n      };\n    \n    handleClose = () => {\n        this.setState({ ...this.state, open: false });\n      };\n\n    handleDelete = () =>{\n        let id = this.props.skill.id;\n        console.log('deleting skill #', id);\n        //dispatch saga to run a delete call\n        this.props.dispatch({type: 'DELETE_SKILL', payload: id});\n        this.handleClose();\n    }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n         <Grid container direction = 'row'\n                justify = 'center'\n                alignContent = 'center'>\n            <Grid item xs = {12} lg = {11} xl = {10}>\n                <Paper className = {classes.paper}> \n                    <Grid container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing = {1}> \n                            <Grid item xs = {12} sm = {6} md = {4}>\n                            {!this.state.edit ? <ReactPlayer url= {this.props.skill.url} \n                                    controls = {true} \n                                    alt = {this.props.skill.description} \n                                    light = {true}\n                                    className = {classes.video}/>\n                                :\n                                <div>\n                                    <TextField\n                                        id=\"title-in\"\n                                        label=\"Title\"\n                                        name='title'\n                                        value = {this.state.title}\n                                        onChange = {this.handleChange}\n                                        className={classes.textField}\n                                        margin=\"normal\"/>\n                                    <br/>\n                                    <TextField\n                                        id=\"url-in\"\n                                        label=\"Url\"\n                                        multiline\n                                        rowsMax=\"3\"\n                                        name='url'\n                                        value = {this.state.url}\n                                        onChange = {this.handleChange}\n                                        className={classes.longField}\n                                        margin=\"normal\"/>\n                                    <br/>\n                                </div>\n                                }  \n                            </Grid>\n                            <Grid item xs = {12} sm = {6} md = {8}> \n                                <Grid container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing = {1}>\n                                <Grid item xs = {4}>\n                                        {!this.state.edit ?\n                                        <div>\n                                            <h3>{this.props.skill.title}</h3>\n                                            <p>{this.props.skill.description}</p>\n                                        </div>\n                                        :\n                                        <>\n                                            <TextField\n                                                id=\"author-in\"\n                                                label=\"Creator\"\n                                                name='author'\n                                                value = {this.state.author}\n                                                onChange = {this.handleChange}\n                                                className={classes.textField}\n                                                margin=\"normal\"\n                                                />  \n                                            <TextField\n                                                label=\"Description\"\n                                                name ='description'\n                                                value = {this.state.description}\n                                                onChange = {this.handleChange}\n                                                multiline\n                                                rowsMax=\"6\"\n                                                className={classes.longField}\n                                                margin=\"normal\"\n                                            />\n                                        </>\n                                        }\n                                    </Grid>\n                                    <Grid item xs = {4}>\n                                    {!this.state.edit ?\n                                    <div>\n                                    <p>Trainer: {this.props.skill.author}</p>\n                                    <ul className = {classes.smallList}>\n                                    <label>Categories:</label>  \n                                        {/* {JSON.stringify(this.state)} */}\n                                    {this.state.viewCategories.map((category, i) =>(\n                                        <li key = {i}>{category.name}</li> \n                                    ))}\n                                    </ul> \n                                    </div>\n                                    :\n                                    <>  \n                                        <FormControl className={classes.formControl}>\n                                            <InputLabel>Category</InputLabel>\n                                            {/* input controlled to state.thisCategory */}\n                                            <Select\n                                                value = {this.state.thisCategory}\n                                                onChange={this.handleChange}\n                                                inputProps={{\n                                                    name: 'thisCategory',\n                                                    id: 'category-in',  \n                                                }}>\n                                                <MenuItem value=\"\">\n                                                <em></em>\n                                                </MenuItem>\n                                                {/* populated from the category reducer props */}\n                                                {this.props.reduxState.category.map((category) =>(\n                                                    <MenuItem value={category} key ={category.id}>\n                                                        {category.name}\n                                                    </MenuItem>\n                                                ))}\n                                            </Select>\n                                            <Button color = \"primary\" onClick = {this.handleAdd}>Add</Button>\n                                        </FormControl>\n                                        <ul className = {classes.smallList} >\n                                            {this.state.viewCategories.map((category, index)=>(\n                                            <li key = {category.id}>\n                                                {category.name} \n                                                <Button value = {category.id} color=\"secondary\" \n                                                    onClick = {this.handleRemove(category)}>\n                                                    <DeleteIcon/>\n                                                </Button>\n                                            </li> \n                                            ))}\n                                        </ul>\n                                    </>}\n                                    </Grid>\n                                    <Grid item xs = {4}>\n                                        {!this.state.edit? \n                                        <>\n                                            <Button variant = 'contained' color = 'primary'\n                                                onClick = {this.handleEditTrue}>\n                                                <EditIcon/> Edit\n                                            </Button>\n                                            <br/>\n                                            <br/>\n                                            <Button variant = 'contained' color = 'secondary'\n                                                onClick = {this.handleClickOpen}>\n                                                <DeleteIcon/> Delete\n                                            </Button>\n                                        </>\n                                        :\n                                        <div>\n                                            <Button variant = 'contained' onClick = {this.handleSave}\n                                                color= 'primary'>\n                                            <SaveAltIcon/> Save Changes\n                                            </Button>\n                                            <br/>\n                                            <br/>\n                                            <Button variant = 'contained' onClick = {this.handleEditFalse}\n                                                color = 'secondary'>\n                                                <CloseIcon/> Exit without saving\n                                            </Button>\n                                        </div>\n                                    }\n                                    </Grid>\n                                </Grid>    \n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n             </Grid>\n          <br/>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}>\n              <DialogContent>\n                  <DialogContentText>\n                     Are you certain you want to permanently delete {this.props.skill.title} from the database?\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button variant = \"outlined\" color = \"primary\" onClick = {this.handleClose}>\n                    <FastRewindIcon/> Oops, NO\n                </Button>\n                <Button variant = \"outlined\" color = \"secondary\" onClick = {this.handleDelete}>\n                    <DeleteIcon/> YES, delete permanently\n                </Button>\n              </DialogActions>\n          </Dialog>\n      </div>\n    );\n  }\n}\n\nEditSkillItem.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(EditSkillItem));","import React, {Component} from 'react';\nimport {Button, Paper, Grid, InputLabel, MenuItem, Select, FormControl} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport EditSkillItem from '../EditSkillItem/EditSkillItem';\nimport { Link } from 'react-router-dom';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\n\n//TO DO: make the skill select hold the id value and worry about the name for display (may need new function)\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n        justify: 'center',\n        minHeight: '800px',\n        backgroundColor: '#923cb5',\n        backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n        backgroundAttachment: 'fixed',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        alignItems: 'canter',\n        color: theme.palette.text.secondary,    \n    },\n    grid: {\n        alignItems: 'flex-end',\n        justify: 'center',\n    },\n    formControl:{\n        width: 200\n    }\n  });\n\nclass EditSkill extends Component {\n  state = {\n    selectedCategory: '',\n    viewing: '',\n    };\n\n    componentDidMount(){\n        //dispatch saga to fetch categories\n        this.props.dispatch({type: 'GET_CATEGORY'})\n        //dispatch saga to set skillCategory reducer\n        this.props.dispatch({type: 'GET_JUNCTION'})\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    \n    handleViewCategory = () => {\n        this.setState({\n            ...this.state,\n            viewing: this.state.selectedCategory.name\n        })\n        console.log('selcted category id:', this.state.selectedCategory.id)\n        //dispatch saga to get all skill_category JOIN skill where id = category.id\n        //set results to state\n        if(this.state.selectedCategory){\n        this.props.dispatch({type:'GET_SKILL_CATEGORY', payload: this.state.selectedCategory.id})\n        }\n    }\n\n    handleViewAll = () => {\n        this.setState({\n            ...this.state,\n            viewing: 'all skills',\n        })\n        //dispatch saga to get ALL THE SKILLS\n        this.props.dispatch({type: 'GET_ALL_SKILL'})\n    }\n  \n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n          <br/>\n           <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing = {2}>\n               <Grid item  xs = {12} md = {11} xl = {10}>\n                 <Paper className = {classes.paper}>\n                    <p><i>Note: you are currently editing the GENREAL DIRECTORY\n                        of skills, and changes made here will be reflected in all \n                        skaters' curricula.\n                        {/* To edit the curriculum of a single skater, please visit th\n                        LINK TO MANAGE SKATERS PAGE */}\n                    </i></p>\n                    <h1>Edit A Skill</h1>\n                    <Grid  container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\">\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>Category</InputLabel>\n                            <Select\n                                value = {this.state.selectedCategory}\n                                onChange={this.handleChange}\n                                inputProps={{\n                                    name: 'selectedCategory',\n                                    id: 'category-in',  \n                                }}>\n                                    <MenuItem value=\"\">\n                                    <em></em>\n                                    </MenuItem>\n                                    {/* DONE: maps categories from the category reducer props */}\n                                    {this.props.reduxState.category.map((category, index) =>(\n                                        <MenuItem value={category} key ={index}>{category.name}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            {this.state.selectedCategory ?\n                            <Button color = \"primary\" variant = \"outlined\" onClick = {this.handleViewCategory}>\n                                    View category\n                                </Button>\n                            :\n                            <Button  disabled variant = \"outlined\"> \n                                    View category\n                                </Button>\n                            }\n                            {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}\n                            <Button variant = 'outlined' color = 'primary' onClick = {this.handleViewAll}>\n                                <AllInclusiveIcon/>\n                                View All Skills\n                            </Button>\n                        </Grid>\n                        {this.state.viewing ? <h2> Editing {this.state.viewing}</h2> :\n                        ''}\n                    </Paper>\n                </Grid>\n            </Grid>\n            {/* <br/> */}\n            <br/>\n            {this.state.viewing ? \n            this.props.reduxState.skill ?\n            this.props.reduxState.skill.map((item) =>\n            (<EditSkillItem skill = {item} key = {item.id}/>)) \n            :\n            <Grid container direction = 'column' \n                justify=\"center\"\n                alignItems=\"center\"\n                spacing = {2}>\n                <Grid item xs = {12} lg = {9} xl = {7}>\n                    <Paper className = {classes.paper}>\n                        <h3>sorry, there are no {this.state.viewing} skill videos yet...\n                        {'\\u00A0'} {'\\u00A0'}\n                        <Link to = '/AddSkill'>Add Some here</Link></h3>\n                    </Paper>\n                </Grid>\n             </Grid>\n            :\n            ''}\n          {/* <br/> */}\n      </div>\n    );\n  }\n}\n\nEditSkill.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(EditSkill));","import React, {Component} from 'react';\nimport {Button, Paper, TextField, Grid} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player/lazy'\nimport CreateIcon from '@material-ui/icons/Create';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\n\n//this component is a single\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        justify: 'center'\n    },\n    video :{\n        maxWidth: '100%',\n        height:'auto'\n    },\n    formControl: {\n        minWidth: 200,\n    },\n    longField:{\n        width: '85%',\n    },\n  });\n\nclass CurriculumItem extends Component {\n  state = {\n    notes: '',\n    submitted: false,\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n    \n    componentDidMount(){\n        if (this.props.skill.skater_notes){\n            this.setState({\n                notes: this.props.skill.skater_notes,\n                submitted: true\n            }) \n        }\n    }\n\n\n    componentDidUpdate(previousProps){\n        if (previousProps.skill.skater_notes !== this.props.skill.skater_notes){\n            this.setState({\n                notes: this.props.skill.skater_notes,\n                submitted: true\n            })\n        }\n    }\n    \n    submitNotes= () => {\n       \n        const submitObject = {\n            user_id: this.props.skill.user_id,\n            skill_id: this.props.skill.id,\n            notes: this.state.notes,\n        };\n        console.log(submitObject);\n        //dispatch Saga with action type 'UPDATE_SKATER_NOTE'\n        this.props.dispatch({type: 'UPDATE_SKATER_NOTE', payload: submitObject})\n\n        this.setState({\n            ...this.state,\n            submitted: true,\n        })\n    }  \n\n\n    handleEdit = () => {\n        this.setState({...this.state, submitted: false,})\n    }\n      \n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n          <br/>\n          <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing = {4}>\n            <Grid item  xs = {12} md ={11} xl = {10}>\n                <Paper className = {classes.paper}>\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing = {0}>\n                         <Grid item xs = {12} md = {8}>\n                            <Grid container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                <ReactPlayer url= {this.props.skill.url} \n                                    controls = {true} \n                                    alt = {this.props.skill.description} \n                                    className = {classes.video}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs = {12} md = {4}> \n                            <Grid container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing = {0}>\n                                        <h2>{this.props.skill.title}</h2>\n                                        <p>{this.props.skill.coach_notes}</p>\n                                      {this.state.submitted ?\n                                         <>\n                                            <i>Note Submitted:</i>\n                                            <p>{this.state.notes}</p>\n                                         </>\n                                      :\n                                        <TextField\n                                            label=\"Notes\"\n                                            name ='notes'\n                                            value = {this.state.notes}\n                                            onChange = {this.handleChange}\n                                            multiline\n                                            rowsMax=\"4\"\n                                            className={classes.longField}\n                                            margin=\"normal\"\n                                            />}\n                                        <br/>\n                                        <br/>\n                                        {this.state.submitted ?\n                                            <Button variant = 'outlined'\n                                                onClick={this.handleEdit}>\n                                               <CreateIcon/>\n                                               Edit Notes\n                                            </Button>\n                                        :\n                                            <Button variant = 'contained' color = 'primary'\n                                                onClick  = {this.submitNotes}>\n                                                 <SaveAltIcon/>   \n                                                 Submit Notes\n                                            </Button>\n                                        }\n                                    </Grid>\n                                {/* </Grid> */}\n                            </Grid>      \n                    </Grid>\n                </Paper>\n            </Grid>\n          </Grid>\n          <br/>\n      </div>\n    );\n  }\n}\n\nCurriculumItem.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(CurriculumItem));","import React, {Component} from 'react';\nimport { Paper, Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport CurriculumItem from '../CurriculumItem/CurriculumItem';\n\n//TO DO: make the skill select hold the id value and worry about the name for display (may need new function)\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n        minHeight: '800px',\n        textAlign: 'center',\n        color: theme.palette.text.secondary, \n        backgroundColor: '#923cb5',\n        backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n        backgroundAttachment: 'fixed',\n    },\n    paper2: {\n        width: '100%',\n        padding: theme.spacing(3),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,    \n    },\n    grid: {\n        alignItems: 'flex-end',\n        justify: 'center',\n    },\n  });\n\nclass Curriculum extends Component {\n  state = {\n    skater: this.props.reduxState.user,\n    };\n\n    componentDidMount(){\n        //to do: replace this with the call to get skills assigned to user\n        this.props.dispatch({type: 'GET_CURRICULUM', payload: this.state.skater.id})\n    }\n\n  \n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n        <br/>\n          <Grid container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing = {2}>\n              <Grid item xs = {12} md = {11} lg = {10}>\n                  <Paper className = {classes.paper2}>\n                      <h1>{this.state.skater.username}'s  Skating Curriculum</h1> \n                  </Paper> \n              </Grid>  \n              <Grid item xs = {12} md = {11} lg = {10}>   \n                  {/* Maps each skill in user's curriuculum onto a CurriculumItem component */}\n                  {this.state.skater ? this.props.reduxState.curriculum.map((item, index) =>\n                  (<CurriculumItem skill = {item} key = {index}/>)) :\n                      ''} \n              </Grid> \n          </Grid>          \n      </div>\n    );\n  }\n}\n\nCurriculum.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(Curriculum));","import React, {Component} from 'react';\nimport {Button, Paper, TextField, Grid, Dialog, DialogActions, DialogContentText, DialogContent} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player/lazy'\nimport CreateIcon from '@material-ui/icons/Create';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center'\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    video :{\n        maxWidth: '99%',\n    },\n    formControl: {\n        minWidth: 200,\n    },\n    longField:{\n        width: '85%',\n    },\n  });\n\nclass ManageSkaterItem extends Component {\n  state = {\n    notes:  '',\n    submitted: false,\n    open: false,\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n    \n    componentDidMount(){\n        if (this.props.skill.coach_notes){\n            this.setState({\n                ...this.state,\n                notes:this.props.skill.coach_notes,\n                submitted: true\n            })\n        } \n       // console.log(this.props.skill)\n    }\n\n    componentDidUpdate(previousProps){\n        if (previousProps.skill.coach_notes !== this.props.skill.coach_notes){\n            this.setState({\n                ...this.state.open,\n                notes: this.props.skill.coach_notes,\n                submitted: true\n            })\n        }\n    }\n    \n    submitNotes= () => {\n        this.setState({\n            ...this.state.notes,\n            submitted: true\n        })\n        const submitObject = {\n            user_id: this.props.skill.user_id,\n            skill_id: this.props.skill.skill_id,\n            notes: this.state.notes,\n        };\n        console.log(submitObject);\n        //dispatch Saga with action type 'UPDATE_SKATER_NOTE'\n        this.props.dispatch({type: 'UPDATE_COACH_NOTE', payload: submitObject})\n    }  \n\n    handleEdit = () => {\n        this.setState({...this.state, submitted: false,})\n    }\n\n    handleDelete = () =>{\n        const deleteObject = {\n           user_id: this.props.skill.user_id,\n           id:this.props.skill.id\n        }\n        console.log(deleteObject);\n       \n        this.props.dispatch({type: 'DELETE_USER_SKILL', payload: deleteObject})\n        //dispatch saga to delete row from skater_skill\n        this.handleClose();\n         \n    }\n\n    handleOpen = () =>{\n        this.setState({\n            ...this.state,\n            open: true\n        })\n    }\n      \n    handleClose = () =>{\n        this.setState({\n            ...this.state,\n            open: false\n        })\n    }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n          <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing = {6}>\n            <Grid item xs = {12} md= {11} lg = {10} xl = {9}>\n                <Paper className = {classes.paper}>\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing = {0}>\n                        <Grid item xs = {12} md = {8}>\n                            <Grid container\n                                    direction=\"column\"\n                                    justify=\"center\"\n                                    alignItems=\"center\">\n                                <ReactPlayer url= {this.props.skill.url} \n                                    controls = {true} \n                                    alt = {this.props.skill.description} \n                                    className = {classes.video}/>\n                                <br/>\n                                <Button variant = \"contained\" color = \"secondary\"\n                                    onClick = {this.handleOpen}>\n                                        <DeleteIcon/>Remove skill\n                                </Button> \n                            </Grid>\n                        </Grid>\n                        <Grid item xs = {12} md = {4}> \n                            <Grid container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing = {9}\n                                >\n                                    <Grid item xs = {12}>\n                                        <h2>{this.props.skill.title}</h2>\n                                        {this.state.submitted ?\n                                         <>\n                                            {<h4>Instructions</h4> &&\n                                            <p>{this.state.notes}</p>}\n                                         </>\n                                      :\n                                      <>\n                                        <TextField\n                                            label=\"instructions\"\n                                            name ='notes'\n                                            value = {this.state.notes}\n                                            onChange = {this.handleChange}\n                                            multiline\n                                            rowsMax=\"4\"\n                                            className={classes.longField}\n                                            margin=\"normal\"\n                                            />\n                                        <br/>\n                                        </>}\n                                        <br/>\n                                        {this.state.submitted ?\n                                            <Button variant = 'contained'\n                                                onClick={this.handleEdit}>\n                                               <CreateIcon/>Edit Instructions\n                                            </Button>\n                                        :\n                                            <Button variant = 'contained' color = 'primary'\n                                                onClick  = {this.submitNotes}>\n                                                <SaveAltIcon/> Save Instructions\n                                            </Button>\n                                        } \n                                    </Grid>\n                                    <Grid item xs = {12} >\n                                    { this.props.skill.skater_notes ?\n                                        <>\n                                        <h4>{this.props.skater.username}'s notes:</h4>\n                                        <p>{this.props.skill.skater_notes}</p>\n                                        </>\n                                        : ''\n                                        }\n                                    <br/>\n                                    </Grid>\n                                </Grid>\n                            </Grid>      \n                     </Grid>\n                </Paper>\n            </Grid>\n          </Grid>\n          \n          <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}>\n              <DialogContent>\n                  <DialogContentText>\n                     Are you sure you want to remove {this.props.skill.title} from {this.props.skater.username}'s curriculum?\n                     (This will also delete any footage of {this.props.skater.username} completing this skill)\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button variant = \"outlined\" color = \"primary\" onClick = {this.handleClose}>\n                    <FastRewindIcon/> Oops, NO\n                </Button>\n                <Button variant = \"outlined\" color = \"secondary\" onClick = {this.handleDelete}>\n                    <DeleteIcon/> YES, remove skill\n                </Button>\n              </DialogActions>\n          </Dialog>\n      </div>\n    );\n  }\n}\n\nManageSkaterItem.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(ManageSkaterItem));","import React, {Component} from 'react';\nimport {Button, Paper,  Grid, Dialog, DialogContent, DialogActions, DialogContentText} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player/lazy'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        alignItems: 'center',\n        justify:'center,'\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: '#616161',\n        backgroundColor: '#f0f4c3',\n        justify: 'center'\n    },\n    video :{\n        maxWidth: '100%',\n    },\n  });\n\nclass FootageItem extends Component {\n  state = {\n    open: false,\n    };\n\n    componentDidMount(){\n      this.props.dispatch({type: 'FETCH_FOOTAGE'})\n       //console.log(this.props.footage)\n    }\n    \n    handleOpen = () =>{\n        this.setState({\n            open: true,\n        })\n    }\n\n   handleDelete = () => {\n     const id = this.props.footage.id\n  // console.log(id);\n    this.props.dispatch({type: 'DELETE_FOOTAGE', payload: id})\n   } \n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n         <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing = {6}>\n             <Grid item xs = {12} sm = {11} md ={10} lg = {9} xl = {8}>         \n                <Paper className = {classes.paper}>\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing = {3}>\n                        <Grid item xs = {12} md = {8}>\n                            <Grid container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                <ReactPlayer url= {this.props.footage.url} \n                                    controls = {true} \n                                    alt = {this.props.footage.added_by}\n                                    className = {classes.video}/> \n                            </Grid>\n                        </Grid>\n                    <Grid item xs = {12} md = {4}> \n                        <h2>{this.props.footage.added_by ?\n                           this.props.footage.added_by + `'s `\n                           :\n                           `Skater `\n                           }\n                           Footage</h2>\n                          <h3>of {this.props.skill.title}</h3>\n                        <p>{this.props.footage.notes}</p>\n                        <Button variant = 'contained' color = 'secondary'\n                        onClick = {this.handleOpen}>\n                           <DeleteIcon/> Delete this Footage\n                        </Button>\n                    </Grid>\n                  </Grid>\n                </Paper>\n             </Grid>  \n          </Grid>\n          <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}>\n              <DialogContent>\n                  <DialogContentText>\n                     Are you sure you want to delete this footage?\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button variant = \"outlined\" color = \"primary\" onClick = {this.handleClose}>\n                    <FastRewindIcon/> Oops, NO\n                </Button>\n                <Button variant = \"outlined\" color = \"secondary\" onClick = {this.handleDelete}>\n                    <DeleteIcon/> YES, delete\n                </Button>\n              </DialogActions>\n          </Dialog>\n      </div>\n    );\n  }\n}\n\nFootageItem.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(FootageItem));","import React, {Component} from 'react';\nimport {Button, Paper, Grid, InputLabel, MenuItem, Select, FormControl} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport ManageSkaterItem from  '../ManageSkaterItem/ManageSkaterItem';\nimport FootageItem from '../FootageItem/FootageItem';\n\n//TO DO: make the skill select hold the id value and worry about the name for display (may need new function)\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 2, \n        alignItems: 'center',\n        minHeight: '800px',\n        backgroundColor: '#923cb5',\n        backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n        backgroundAttachment: 'fixed',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,    \n    },\n    grid: {\n        alignItems: 'center',\n        justify: 'center',\n    },\n    formControl:{\n        width: 200\n    },\n  });\n\nclass ManageSkater extends Component {\n  state = {\n    selectedSkater: '',\n    viewing: '',\n    };\n\n    componentDidMount(){\n        //dispatch saga to fetch categories\n        this.props.dispatch({type: 'GET_SKATER'})\n        this.props.dispatch({type: 'FETCH_FOOTAGE'})\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    \n    handleViewskater = () => {\n        this.setState({\n            ...this.state,\n            viewing: this.state.selectedSkater\n        })\n        console.log('selcted skater id:', this.state.selectedSkater.id)\n        //dispatch saga to get all skill_category JOIN skill where id = category.id\n        //set results to state\n        this.props.dispatch({type:'GET_CURRICULUM', payload: this.state.selectedSkater.id})\n    }\n\n  \n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n          <br/>\n      <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing = {2}>\n            <Grid item  xs = {12} sm = {11} lg = {10} xl = {9}>\n            <Paper className = {classes.paper}>\n                <h1>Manage Skaters</h1>\n                <Grid  container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"flex-end\">\n                    \n                    <FormControl className={classes.formControl}>\n                        <InputLabel >Skaters</InputLabel>\n                        <Select\n                            value = {this.state.selectedSkater}\n                            onChange={this.handleChange}\n                            inputProps={{\n                                name: 'selectedSkater',\n                                id: 'category-in',  \n                            }}>\n                                <MenuItem value=\"\">\n                                <em></em>\n                                </MenuItem>\n                                {this.props.reduxState.allSkater.map((user, index) =>(\n                                    <MenuItem value={user} key ={index}>{user.username}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        {this.state.selectedSkater ?\n                        <Button color = \"primary\" variant = \"contained\" onClick = {this.handleViewskater}>\n                                View Skater's Curriculum\n                            </Button>\n                        :\n                        <Button  disabled variant = \"contained\"> \n                                View Skater's Curriculum\n                            </Button>\n                        }   \n                    </Grid>\n                   \n                    {this.state.viewing ? \n                    <div>\n                        <h2> Viewing {this.state.viewing.username}'s Curriculum</h2> \n                        <i>{this.state.viewing.email}</i>\n                        \n                        <Grid  container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"flex-end\"\n                            spacing = {4}\n                            padding = {2}>\n                            <Grid item xs = {12} md= {6}>\n                                {this.state.viewing.bio \n                                ? \n                                <>\n                                    <h3>Bio</h3> \n                                    <p>{this.state.viewing.bio}</p>\n                                </>\n                                :\n                                ''\n                                }\n                            </Grid>\n                            <Grid item xs = {12} md = {6}>\n                                {this.state.viewing.goals ?\n                                <>\n                                    <h3>Skater Goals</h3> \n                                    <p>{this.state.viewing.goals}</p>\n                                </>\n                            : '' }\n                            </Grid>\n                        </Grid>\n                        </div>\n                        \n                    \n                    :\n                    ''}\n                     </Paper>\n                    </Grid>\n                </Grid>\n                <br/>\n            {/* This next block renders the skills of a skater's curriculum.\n            Followed by that skater's footage of that skill if it exists */}\n             {this.state.viewing ? \n             this.props.reduxState.curriculum.map((item, index) =>\n                (\n                    <div key = {index}>\n                        <ManageSkaterItem skater = {this.state.viewing} skill = {item}/>     \n                            {this.props.reduxState.footage.map((footage, index) => (\n                            (footage.user_skill_id === item.id)\n                            ?\n                            <FootageItem key = {index} footage = {footage} skill={item}/> \n                            :\n                            ''\n                        ))}\n                    </div>\n                )) \n             :\n            ''\n            }\n            <br/>\n      </div>\n    );\n  }\n}\n\nManageSkater.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \n  export default withStyles(styles)(connect(mapStateToProps)(ManageSkater));","import React, {Component} from 'react';\nimport {Button, Snackbar, IconButton, Paper, TextField, InputLabel, MenuItem, Select, FormControl, Grid, Typography} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#923cb5',\n        backgroundImage: 'linear-gradient(147deg,  #000000 0%, #923cb5 74%)',\n        height: '800px',\n        alignItems: 'center',\n        justify: 'center',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(5),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        justify: 'center',\n    },\n    textFeld:{\n        width: 200,\n    },\n    longField:{\n        width: '85%',\n    },\n   formControl:{\n        width: '300px',\n    },\n    success:{\n        backgroundColor: green,\n    }\n  });\n\nclass AddSelfFootage extends Component {\n  state = {\n    skater:'',\n    url:'',\n    notes:'',\n    skill: '',\n    lastSkill: '',\n    submitted: false,\n    };\n\n    componentDidMount(){\n        //dispatch saga to fetch categories\n        this.props.dispatch({type: 'GET_CURRICULUM', payload: this.props.reduxState.user.id})\n    }\n\n    //handleChange is a multi-use function that manages the state change\n    //any time an input is edited\n    handleChange = (event) => {\n        this.setState({ \n            ...this.state,\n            [event.target.name]: event.target.value });\n      };\n\n   \n //handleSubmit creates a post object from the inputted name, url,\n //skill id (from user_skill), and notes and posts it to the\n //user_footage table if required fields are present\n      handleSubmit = () =>{\n       console.log(this.state.skill)\n       const postObject = {\n            user_skill_id: this.state.skill.id,\n            url: this.state.url,\n            added_by: this.state.skater,\n            notes: this.state.notes,\n       } \n       //call post saga\n       if (postObject.url&&postObject.user_skill_id){\n        this.props.dispatch({type: 'ADD_FOOTAGE', payload: postObject})\n        }\n       //clear inputs\n       this.setState({\n           submitted: true,\n           lastSkill: this.state.skill.title,\n           skill: '',\n           url:'',\n           skater: '',\n           notes: '' \n       })\n    }\n\n    //dismisses the snackbar that informs user of submit\n    handelOk = () =>{\n        this.setState({\n            ...this.state,\n            submitted:false,\n        })\n    }\n\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n          <br/>\n          <Grid container\n           direction = \"row\"\n           alignItems = \"center\"\n           justify = 'center'\n           >\n            <Grid item xs = {12} md = {11} lg = {10} >\n                <Paper className = {classes.paper}>\n                        <h2>Add Self Footage</h2>\n                        {/* Eventually, this next bit should be conditional upon user != coach */}\n                        <Typography nowrap='text'>Your coach will be able to view this video of yourself completing a skill</Typography>\n                        {/* A link to the add self footage page will appear here if the user is not a coach */}\n                       \n                        {'\\u00A0'}{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                        <TextField\n                        id=\"skater-in\"\n                        label=\"My Name\"\n                        name='skater'\n                        value = {this.state.skater}\n                        onChange = {this.handleChange}\n                        className={classes.textField}\n                        margin=\"normal\"/>\n                        <TextField\n                        id=\"url-in\"\n                        label=\"*Video Url\"\n                        name='url'\n                        value = {this.state.url}\n                        onChange = {this.handleChange}\n                        className={classes.longField}\n                        margin=\"normal\"/>\n                        <br/>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"age-simple\">*Skill Pictured</InputLabel>\n                            {/* TO DO: CONTROLL ALL THESE INPUTS */}\n                            <Select\n                                value = {this.state.skill}\n                                onChange={this.handleChange}\n                                inputProps={{\n                                    name: 'skill',\n                                    id: 'skill-in',  \n                                }}>\n                                    <MenuItem value=\"\">\n                                    <em></em>\n                                    </MenuItem>\n                                    {/* TO DO: CHANGE this.state.allcategory to the category reducer props */}\n                                    {this.props.reduxState.curriculum.map((skill, index) =>(\n                                        <MenuItem value={skill} key ={index}>{skill.title}</MenuItem>\n                                    ))}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                        label=\"Notes\"\n                        name ='notes'\n                        value = {this.state.notes}\n                        onChange = {this.handleChange}\n                        multiline\n                        rowsMax=\"4\"\n                        className={classes.longField}\n                        />\n                        <br/>\n                        <br/>\n                        {(this.state.skill&& this.state.url) ?\n                    <Button variant ='contained' color = 'primary' size = \"large\" onClick = {this.handleSubmit}>\n                        Submit\n                    </Button>\n                        :\n                        <Button variant ='contained' disabled size = \"large\">\n                        Submit\n                        </Button>\n                        }\n                </Paper> \n            </Grid>\n          </Grid>\n          {/* This snackbar lets a user know they have submitted footage*/}\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={this.state.submitted}\n            autoHideDuration={6000}\n            onClose={this.handelOk}\n            className = {classes.success}\n            ContentProps={{\n                'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">\n                    Successfully submitted  your footage of {this.state.lastSkill}\n                </span>}\n            action={[\n                <IconButton\n                color=\"inherit\"\n                onClick={this.handelOk}\n                key=\"close\"\n                >\n                <CloseIcon />\n                </IconButton>,\n            ]}\n          />\n      </div>\n    );\n  }\n}\n\nAddSelfFootage.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = reduxState => ({\n    reduxState,\n  });\n  \nexport default withStyles(styles)(connect(mapStateToProps)(AddSelfFootage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {Button, Paper, Grid,} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\n\nconst styles = theme => ({\n  root: {\n      flexGrow: 2,\n      alignItems: 'center',\n      justify: 'center',\n      backgroundColor: 'black',\n      backgroundImage: 'url(https://images.squarespace-cdn.com/content/v1/5b7e168725bf02338601dd50/1534993658578-3NPEWQJERIOO4IX3B82Q/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/derby-13.jpg)',\n      minHeight: '820px',\n      backgroundPosition:'center bottom',\n      backgroundRepeat: 'no-repeat',\n      //backgroundAttachment: 'fixed',\n      //backgroundSize: 'cover',\n  },\n  paper: {\n      width: '100%',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      justify: 'center',\n  },\n});\n\nclass Landing extends Component {\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className = {classes.root}>\n        <Grid container direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\">\n          <Grid item xs = {12} md = {11} lg = {10} xl = {9}>\n            <Paper className ={classes.paper}>\n                <h1 id=\"welcome\">\n                    Welcome to Jammer Coach\n                </h1>\n                <i>What would you like to do?</i>\n                <br/>\n                <br/> \n                <Grid container direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing = {1}>\n                    {this.props.user.is_coach?\n                    <>\n                        <Grid item xs = {12} sm = {6} md ={3}>\n                            <Button variant = 'contained' color = 'primary'\n                            component = {Link} to = '/manage'>\n                                <SupervisorAccountIcon/>\n                                Manage Skaters\n                            </Button>\n                        </Grid>\n                        <Grid item xs = {12} sm = {6} md ={3}>\n                            <Button variant = 'contained' color ='primary'\n                            component = {Link} to = '/AssignList'>\n                                <AssignmentIcon/>\n                                Assign Skills\n                            </Button>\n                        </Grid>\n                        <Grid item xs = {12} sm = {12} md ={3}>\n                            <Button variant = 'contained' color ='primary'\n                            component = {Link} to = '/AddSkill'>\n                                <AddIcon/>\n                                Add Skills\n                            </Button>\n                        </Grid>\n                    </>\n                    :\n                    <> \n                        <Grid item xs = {12} sm = {6} md ={3}>\n                            <Button variant ='contained' color = 'primary'\n                            component = {Link} to = '/curriculum'>\n                                <VideocamIcon/>\n                                View My Curriculum\n                            </Button>\n                        </Grid>\n                        <Grid item  xs = {12} sm = {6} md = {3}>\n                        \n                        <Button variant ='contained' color ='primary'\n                        component = {Link} to = '/footage'>\n                            <AddAPhotoIcon/>\n                            Add Self-Footage\n                        </Button>\n                        </Grid>\n                    </>\n                    }\n                   \n                </Grid>\n                <Grid container direction = 'row' justify = 'center' alignItems = 'center' spacing ={0}> \n                    <h2>&#8598; </h2>\n                    {'\\u00A0'}{'\\u00A0'}\n                    <i>More features can be found in the list menu</i>\n                 </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n        <br/>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(Landing));\n","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  Link\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport CoachRoute from '../CoachRoute/CoachRoute';\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport AddSkill from '../AddSkill/AddSkill';\nimport AssignList from '../AssignList/AssignList';\nimport './App.css';\nimport EditSkill from '../EditSkill/EditSkill';\nimport Curriculum  from '../Curriculum/Curriculum';\nimport ManageSkater from '../ManageSkater/ManageSkater';\nimport AddSelfFootage from '../AddSelfFootage/AddSelfFootage'\nimport { CssBaseline, MuiThemeProvider, createMuiTheme, } from '@material-ui/core';\nimport Landing from '../Landing/Landing';\nimport SportsIcon from '@material-ui/icons/Sports';\nimport { blue, deepOrange, green,} from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette:{\n    primary: blue,\n    secondary: deepOrange,\n    success: green, \n  },\n  overrides: {\n    Snackbar: {\n      backgroundColor: green,\n    }\n  }\n})\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n    console.log(theme);\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme = {theme}>\n      <Router>\n        <CssBaseline/>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              component={Landing}\n            />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            <ProtectedRoute\n              exact\n              path=\"/profile\"\n              component={UserPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/addSkill\"\n              component={AddSkill}\n            />\n            {/* Only coaches can assign and edit skills */}\n            <CoachRoute \n              path = \"/AssignList\"\n              component = {AssignList}\n              />\n              <CoachRoute \n              path = \"/EditSkill\"\n              component = {EditSkill}\n              />\n              <ProtectedRoute \n              path = \"/curriculum\"\n              component = {Curriculum}\n              />\n              {/* Only coaches can manage skater curriculi */}\n               <CoachRoute \n              path = \"/manage\"\n              component = {ManageSkater}\n              />\n              <ProtectedRoute \n              path = \"/footage\"\n              component = {AddSelfFootage}\n              />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() =>\n              <center>\n                <h1> 404 </h1>        \n                  <h2> <SportsIcon/> <Link to='/home'>   Skater, return to track! </Link></h2>   \n              </center>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n      </MuiThemeProvider>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}